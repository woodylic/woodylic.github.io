<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>C# on woodylic's blog</title><link>https://woodylic.github.io/tags/c#/</link><description>Recent content in C# on woodylic's blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 11 Dec 2017 13:04:09 +0000</lastBuildDate><atom:link href="https://woodylic.github.io/tags/c#/index.xml" rel="self" type="application/rss+xml"/><item><title>翻译：为什么应该在类库里使用ConfigureAwait(false)</title><link>https://woodylic.github.io/post/why-you-should-use-configureawait-false-in-your-library-code-cn/</link><pubDate>Mon, 11 Dec 2017 13:04:09 +0000</pubDate><guid>https://woodylic.github.io/post/why-you-should-use-configureawait-false-in-your-library-code-cn/</guid><description>&lt;p>&lt;strong>源文链接&lt;/strong>：&lt;a href="https://medium.com/bynder-tech/c-why-you-should-use-configureawait-false-in-your-library-code-d7837dce3d7f">C#: Why you should use ConfigureAwait(false) in your library code&lt;/a> （翻译：&lt;a href="https://woodylic.github.io">woodylic&lt;/a>）&lt;/p>
&lt;p>自从.NET 4.5引入了async/await以后，编写异步代码变得相当容易。Async/await关键字使得异步代码看起来和同步代码非常类似，这大大提高了代码的可读性以及编程效率，这多亏了编译器处理了异步编程最困难的部分。&lt;/p></description></item></channel></rss>